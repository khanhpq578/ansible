# Server user variables
server_user: 'vagrant'
server_hostname: 'local-server-ansible-20'

# Nodejs variables
node_version: 'v18.20.4'

# Php variables
php_version: '8.1'
php_root_folder: ''
php_ini_configs:
  - { key: 'upload_max_filesize', value: '32M' }
  - { key: 'post_max_size', value: '48M' }
  - { key: 'memory_limit', value: '256M' }
  - { key: 'max_execution_time', value: '600' }
  - { key: 'max_input_vars', value: '3000' }
  - { key: 'max_input_time', value: '1000' }
php_pool_configs:
  - { key: 'pm.max_children', value: '5' }
  - { key: 'pm.start_servers', value: '2' }
  - { key: 'pm.min_spare_servers', value: '1' }
  - { key: 'pm.max_spare_servers', value: '3' }
  - { key: 'pm.max_requests', value: '500' }

# Nginx variables
nginx_conf_sites:
  - { src: './configs/nginx/nextjs.conf', dest: 'nextjs.conf' }
  - { src: './configs/nginx/reactjs.conf', dest: 'reactjs.conf' }
  - { src: './configs/nginx/php.conf', dest: 'laravel.conf' }
  - { src: './configs/nginx/wordpress.conf', dest: 'wordpress.conf' }
  - { src: './configs/nginx/nodejs.conf', dest: 'nodejs.conf' }
nginx_client_max_body_size: 200M

# Mysql variables
mysql_version: '8'
mysql_host: localhost
mysql_port: 3306
mysql_root_password: secret
mysql_admin_user: admin
mysql_admin_password: secret
mysql_db_name: test
mysql_password_validation_policy: 1
# 0 - Low
# 1 - Medium
# 2 - Strong

# PostgreSQL variables
postgresql_is_download: true
postgresql_version: '15'
postgresql_host: localhost
postgresql_port: 5432
postgresql_root_user: postgres
postgresql_root_password: secret
postgresql_admin_user: admin
postgresql_admin_password: secret
postgresql_db_name: test

# Config swap ram
swap_ram_value: '8'

# Deploy laravel
laravel_git_repo: ''
laravel_project_name: 'laravel'
laravel_project_local_path: '/home/{{server_user}}/{{laravel_project_name}}'
laravel_project_path: '/var/www/{{laravel_project_name}}'
laravel_env_file: '.env.staging.example'
laravel_env_destination: '.env'

# Deploy nextjs
nextjs_git_repo: ''
nextjs_project_name: 'nextjs'
nextjs_project_local_path: '/home/{{server_user}}/{{nextjs_project_name}}'
nextjs_project_path: '/var/www/{{nextjs_project_name}}'
nextjs_env_file: '.env.staging.example'
nextjs_env_destination: '.env'

# Deploy reactjs
reactjs_git_repo: ''
reactjs_project_name: 'reactjs'
reactjs_project_local_path: '/home/{{server_user}}/{{reactjs_project_name}}'
reactjs_project_path: '/var/www/{{reactjs_project_name}}'
reactjs_build_dir: 'dist'
reactjs_env_file: '.env.staging.example'
reactjs_env_destination: '.env'

# Deploy nodejs
nodejs_git_repo: ''
nodejs_project_name: 'nodejs'
nodejs_project_local_path: '/home/{{server_user}}/{{nodejs_project_name}}'
nodejs_project_path: '/var/www/{{nodejs_project_name}}'
nodejs_build_dir: 'dist'
nodejs_env_file: '.env.staging.example'
nodejs_env_destination: '.env'

# Deploy wordpress
wordpress_git_repo: ''
wordpress_project_name: 'wordpress'
wordpress_project_local_path: '/home/{{server_user}}/{{ wordpress_project_name }}'
wordpress_project_path: '/var/www/{{wordpress_project_name}}'
wordpress_config_file: 'wp-config-sample.php'
wordpress_config_destination: 'wp-config.php'
wordpress_db_name: db
wordpress_db_host: localhost
wordpress_db_username: admin
wordpress_db_password: secret

# Deploy chatwoot
chatwoot_project_name: chatwoot
chatwoot_db_password: secret
chatwoot_url: 'https://chatwoot.com'
chatwoot_dir: '/home/{{server_user}}/{{chatwoot_project_name}}'
chatwoot_env_url: 'https://raw.githubusercontent.com/chatwoot/chatwoot/develop/.env.example'
chatwoot_docker_compose_url: 'https://raw.githubusercontent.com/chatwoot/chatwoot/develop/docker-compose.production.yaml'

# ssh user
ssh_username: 
ssh_password: 
ssh_public_key: 
ssh_port: 2212

# Supervisor variables
supervisor_conf:
  - { src: './configs/supervisor/queue.conf', dest: '/etc/supervisor/conf.d/queue.conf' }
supervisor_path: '/etc/supervisor'

# monitor
monitor_server_name: 
monitor_server_environment: 
monitor_server_secret_token: 
monitor_server_server_url: 

monitor_fleet_enroll: |
  curl -L -O https://artifacts.elastic.co/downloads/beats/elastic-agent/elastic-agent-8.6.2-linux-x86_64.tar.gz
  tar xzvf elastic-agent-8.6.2-linux-x86_64.tar.gz
  cd elastic-agent-8.6.2-linux-x86_64
  echo "Y" | sudo ./elastic-agent install --url=https://5d88f8869cf241e9970f2af40cc7e02c.fleet.ap-southeast-1.aws.found.io:443 --enrollment-token=

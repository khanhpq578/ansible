---
- name: Deploy Next.js Application
  hosts: all
  become: no
  vars_files:
    - ../../external_vars.yaml

  tasks:
    - name: Run ssh-keyscan to add GitLab to known_hosts
      shell: ssh-keyscan gitlab.lisod.vn >> ~/.ssh/known_hosts
      args:
        creates: ~/.ssh/known_hosts

    - name: Check if local Next.js directory exists
      stat:
        path: '{{ nextjs_project_local_path }}'
      register: local_nextjs_exists

    - name: Exit playbook if local Next.js already exists
      meta: end_play
      when: local_nextjs_exists.stat.exists

    - name: Clone the Next.js project repository
      git:
        repo: '{{ nextjs_git_repo }}'
        dest: '{{ nextjs_project_local_path }}'
        update: yes

    - name: Copy Next.js from local directory
      command: cp -ra {{ nextjs_project_local_path }} {{ nextjs_project_path }}
      become: yes

    - name: Install project dependencies with npm
      shell: |
        bash -i -c 'yarn'
      args:
        chdir: '{{ nextjs_project_path }}'

    - name: Copy environment file
      copy:
        src: '{{ nextjs_project_path }}/{{ nextjs_env_file }}'
        dest: '{{ nextjs_project_path }}/{{ nextjs_env_destination }}'
        remote_src: yes

    - name: Build the Next.js application
      shell: |
        bash -i -c 'yarn build'
      args:
        chdir: '{{ nextjs_project_path }}'

    # Run pm2
    - name: Ensure pm2-configs directory exists
      file:
        path: /home/{{ server_user }}/pm2-configs
        state: directory

    - name: Copy pm2-next.json to the server
      copy:
        src: ../configs/pm2/pm2-next.json
        dest: /home/{{ server_user }}/pm2-configs/pm2-next.json

    - name: Start next.js app with PM2
      shell: |
        bash -i -c 'pm2 start /home/{{ server_user }}/pm2-configs/pm2-next.json'

    - name: Save the PM2 process list
      shell: |
        bash -i -c ' env PATH=$PATH:/home/{{server_user}}/.nvm/versions/node/{{node_version}}/bin /home/{{server_user}}/.nvm/versions/node/{{node_version}}/lib/node_modules/pm2/bin/pm2 startup systemd -u {{server_user}} --hp /home/{{server_user}}'
      become: true

    - name: Save the PM2 process list
      shell: |
        bash -i -c 'pm2 save'
